name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - "**"
    paths:
      - "core/**"
      - "recursion/**"
      - "sdk/**"
      - "examples/fibonacci-io/**"
      - ".github/workflows/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Core
    runs-on: warp-ubuntu-latest-arm64-32x
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.PULL_TOKEN }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p sp1-core -p sp1-recursion-compiler -p sp1-recursion-program -p sp1-recursion-circuit --release
        env:
          RUSTFLAGS: -Copt-level=3 -Cdebug-assertions -Coverflow-checks=y -Cdebuginfo=0 -C target-cpu=native
          RUST_LOG: 1
          RUST_BACKTRACE: 1
          CARGO_INCREMENTAL: 1
          FRI_QUERIES: 1
  e2e:
    name: E2E
    runs-on: warp-ubuntu-latest-arm64-8x
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.PULL_TOKEN }}

      - name: Install sp1 toolchain
        run: |
          curl -L https://sp1.succinct.xyz | bash
          echo "/root/.sp1/bin" >> $GITHUB_PATH
          /root/.sp1/bin/sp1up

      - name: Run fibonacci-io example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --manifest-path examples/fibonacci-io/script/Cargo.toml
        env:
          RUSTFLAGS: -Copt-level=3 -Cdebug-assertions -Coverflow-checks=y -Cdebuginfo=0 -Ctarget-cpu=native
          RUST_LOG: 1
          RUST_BACKTRACE: 1
          CARGO_INCREMENTAL: 1

  misc:
    name: Miscellaneous
    runs-on: warp-ubuntu-latest-arm64-8x
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.PULL_TOKEN }}
      - name: Run cargo test with no default features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p sp1-core --release --no-default-features --features debug -- cpu::trace::tests::generate_trace
        env:
          RUSTFLAGS: -Copt-level=3 -Cdebug-assertions -Coverflow-checks=y -Cdebuginfo=0 -Ctarget-cpu=native
          RUST_LOG: 1
          RUST_BACKTRACE: 1
          CARGO_INCREMENTAL: 1

  lints:
    name: Formatting & Clippy
    runs-on: warp-ubuntu-latest-arm64-8x
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          pull_token: ${{ secrets.PULL_TOKEN }}

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
        env:
          CARGO_INCREMENTAL: 1

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings -A incomplete-features
        env:
          CARGO_INCREMENTAL: 1
